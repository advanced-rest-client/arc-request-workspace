{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`arc-request-workspace`\n\nA request workspace component for Advanced REST Client that creates a\nlist of requests.\n\nThe element does not contain any logic responsible for storing and restoring\ndata. To use this component handle `workspace-state-store` and `workspace-state-read`\ncustom events. See source for implementation detaild.\n\n## Styling\n\n`<arc-request-workspace>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--arc-request-workspace` | Mixin applied to this elment | `{}`\n`--arc-request-workspace-tabs-backgroud-color` | | `rgba(0, 0, 0, 0.05)`\n`--arc-request-workspace-tabs-border-color` | | `#e5e5e5`\n`--arc-request-workspace-tabs-color` | | `rgba(0,0,0,0.87)`\n`--arc-request-workspace-tabs-selected-background-color` | | `#fff`\n`--arc-request-workspace-tabs-close-color` | Color of tab close button | `rgba(0, 0, 0, 0.78)`\n`--arc-request-workspace-tabs-close-color-hover` | Color of tab close button when hovered | `rgba(255, 255, 255, 0.54)`\n`--arc-request-workspace-tabs-close-background-color-hover` | Background color of tab close button when hovered | `#FF8A65`\n`--arc-request-workspace-tabs-add-color` | Color of the add tab button | `#616161`\n`--arc-request-workspace-tabs-add-background-color` | Background color of the add tab button | ``\n`--arc-request-workspace-tabs-add-color-hover` | Color of the add tab button when hovered | `#616161`\n`--arc-request-workspace-tabs-add-background-color-hover` | Background color of the add tab button when hovered | ``\n`--arc-request-workspace-tab-dragging-background-color` | Background color of a tab when dragged | `#fff !important`",
      "summary": "",
      "path": "arc-request-workspace.html",
      "properties": [
        {
          "name": "dragging",
          "type": "boolean | null | undefined",
          "description": "True when file is dragged over the element.",
          "privacy": "public",
          "sourceRange": {
            "file": "../arc-file-drop-mixin/arc-file-drop-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 63,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcComponents.ArcFileDropMixin"
        },
        {
          "name": "_dragPossible",
          "type": "Boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 317,
              "column": 4
            },
            "end": {
              "line": 320,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "redirectUri",
          "type": "string | null | undefined",
          "description": "The OAuth2 redirect URI to pass to the authorization panel.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 256,
              "column": 8
            },
            "end": {
              "line": 256,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "selected",
          "type": "number | null | undefined",
          "description": "Index of selected request panel",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 260,
              "column": 8
            },
            "end": {
              "line": 264,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_selectedChanged\"",
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "activeRequests",
          "type": "Array.<Object>",
          "description": "List of currently loaded requests",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 8
            },
            "end": {
              "line": 274,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "environment",
          "type": "string | null | undefined",
          "description": "Currently selected workspace.\nWhen this value change it triggers workspace state change.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 8
            },
            "end": {
              "line": 282,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_envChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "restoring",
          "type": "boolean | null | undefined",
          "description": "If set then workspace restoration process is in progress.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 286,
              "column": 8
            },
            "end": {
              "line": 292,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "noAutoRestore",
          "type": "boolean | null | undefined",
          "description": "The component automatically ask to restore workspace when connected\nto the DOM. This ensures to prohibit auto restore request.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 297,
              "column": 8
            },
            "end": {
              "line": 297,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "editorOpened",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 298,
              "column": 8
            },
            "end": {
              "line": 298,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "detailsOpened",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 299,
              "column": 8
            },
            "end": {
              "line": 299,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "snippetsOpened",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 300,
              "column": 8
            },
            "end": {
              "line": 300,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "snippetRequest",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 301,
              "column": 8
            },
            "end": {
              "line": 301,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "initialized",
          "type": "boolean | null | undefined",
          "description": "Set when workspace state has been read.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 305,
              "column": 8
            },
            "end": {
              "line": 305,
              "column": 52
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "__createPanelInstance",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "request-panels-mixin.html",
            "start": {
              "line": 41,
              "column": 6
            },
            "end": {
              "line": 47,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "ArcComponents.ArcWorkspaceMixin"
        },
        {
          "name": "__setPanelRequestProperties",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "request-panels-mixin.html",
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "panel"
            },
            {
              "name": "request"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcWorkspaceMixin"
        },
        {
          "name": "__addPanelListeners",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "request-panels-mixin.html",
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 70,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "panel"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcWorkspaceMixin"
        },
        {
          "name": "__removePanelListeners",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "request-panels-mixin.html",
            "start": {
              "line": 72,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "panel"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcWorkspaceMixin"
        },
        {
          "name": "__getPanelById",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "request-panels-mixin.html",
            "start": {
              "line": 85,
              "column": 6
            },
            "end": {
              "line": 87,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id"
            }
          ],
          "inheritedFrom": "ArcComponents.ArcWorkspaceMixin"
        },
        {
          "name": "__addPanel",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "request-panels-mixin.html",
            "start": {
              "line": 89,
              "column": 6
            },
            "end": {
              "line": 99,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcWorkspaceMixin"
        },
        {
          "name": "__removePanel",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "request-panels-mixin.html",
            "start": {
              "line": 101,
              "column": 6
            },
            "end": {
              "line": 109,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcWorkspaceMixin"
        },
        {
          "name": "__editorRequestHandler",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "request-panels-mixin.html",
            "start": {
              "line": 111,
              "column": 6
            },
            "end": {
              "line": 137,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcWorkspaceMixin"
        },
        {
          "name": "__editorMetaHandler",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "request-panels-mixin.html",
            "start": {
              "line": 139,
              "column": 6
            },
            "end": {
              "line": 178,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcWorkspaceMixin"
        },
        {
          "name": "__deselectActivePanel",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "request-panels-mixin.html",
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcWorkspaceMixin"
        },
        {
          "name": "__selectPanel",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "request-panels-mixin.html",
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 196,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcWorkspaceMixin"
        },
        {
          "name": "__updatePanelRequest",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "request-panels-mixin.html",
            "start": {
              "line": 198,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id"
            },
            {
              "name": "request"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcWorkspaceMixin"
        },
        {
          "name": "__clearAllPanels",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "request-panels-mixin.html",
            "start": {
              "line": 207,
              "column": 6
            },
            "end": {
              "line": 213,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcWorkspaceMixin"
        },
        {
          "name": "__updatePanelId",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "request-panels-mixin.html",
            "start": {
              "line": 215,
              "column": 6
            },
            "end": {
              "line": 222,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "oldId"
            },
            {
              "name": "newId"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcWorkspaceMixin"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 330,
              "column": 4
            },
            "end": {
              "line": 340,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onDragEnter",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../arc-file-drop-mixin/arc-file-drop-mixin.html",
            "start": {
              "line": 67,
              "column": 4
            },
            "end": {
              "line": 70,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcFileDropMixin"
        },
        {
          "name": "_onDragLeave",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../arc-file-drop-mixin/arc-file-drop-mixin.html",
            "start": {
              "line": 72,
              "column": 4
            },
            "end": {
              "line": 75,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcFileDropMixin"
        },
        {
          "name": "_onDragOver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../arc-file-drop-mixin/arc-file-drop-mixin.html",
            "start": {
              "line": 77,
              "column": 4
            },
            "end": {
              "line": 79,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcFileDropMixin"
        },
        {
          "name": "_onDrop",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../arc-file-drop-mixin/arc-file-drop-mixin.html",
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 89,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcFileDropMixin"
        },
        {
          "name": "_cancelEvent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../arc-file-drop-mixin/arc-file-drop-mixin.html",
            "start": {
              "line": 91,
              "column": 4
            },
            "end": {
              "line": 94,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcFileDropMixin"
        },
        {
          "name": "_processEntries",
          "description": "Dispatches `api-process-file` if the file is of a type of\n`application/zip` or `application/yaml`. Dispatches `import-process-file`\nevent in other cases.\n\nWhen handling json file it reads the file and checks if file is\nOAS/swagger file.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../arc-file-drop-mixin/arc-file-drop-mixin.html",
            "start": {
              "line": 105,
              "column": 4
            },
            "end": {
              "line": 132,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "files",
              "type": "FileList",
              "description": "Dropped files list"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcFileDropMixin"
        },
        {
          "name": "_notifyApiParser",
          "description": "Dispatches `api-process-file` to parse API data.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../arc-file-drop-mixin/arc-file-drop-mixin.html",
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 154,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "file",
              "type": "File",
              "description": "User file."
            }
          ],
          "return": {
            "type": "Promise"
          },
          "inheritedFrom": "ArcComponents.ArcFileDropMixin"
        },
        {
          "name": "_fire",
          "description": "Dispatches custom event and returns it.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../arc-file-drop-mixin/arc-file-drop-mixin.html",
            "start": {
              "line": 161,
              "column": 4
            },
            "end": {
              "line": 170,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Event type"
            },
            {
              "name": "detail",
              "type": "Object",
              "description": "Event detail object"
            }
          ],
          "return": {
            "type": "CustomEvent"
          },
          "inheritedFrom": "ArcComponents.ArcFileDropMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 348,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "restoreWorkspace",
          "description": "Restores workspace state.\nIt dispatches `workspace-state-read` custom event to query for workspace data\nand restores requests if they were previously stored.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 356,
              "column": 4
            },
            "end": {
              "line": 400,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_restore",
          "description": "Restores workspace state from previously stored data.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 405,
              "column": 4
            },
            "end": {
              "line": 436,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "state",
              "type": "Object",
              "description": "Workspace state object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getEmptyPosition",
          "description": "Finds first position where the request is empty.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 441,
              "column": 4
            },
            "end": {
              "line": 455,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Number",
            "desc": "Index of empty request or `-1`."
          }
        },
        {
          "name": "_computeTabName",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 457,
              "column": 4
            },
            "end": {
              "line": 465,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "appendRequest",
          "description": "Appends request to the list of `activeRequests` and selects it.\n\nNote, the request data are passed after rext render frame so returned\nindex referes to empty object at the time when it's returned.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 479,
              "column": 4
            },
            "end": {
              "line": 512,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request",
              "type": "Object",
              "description": "ArcRequest object."
            },
            {
              "name": "opts",
              "type": "?Object",
              "description": "Add request options:\n- skipPositionCheck {Boolean} - Won't check for empty panel before\nappending it to the list\n- noAutoSelect {Boolean} - Won't attempt to select added request"
            }
          ],
          "return": {
            "type": "Number",
            "desc": "Index of newly created request."
          }
        },
        {
          "name": "addEmptyRequest",
          "description": "Adds an empty request to the workspace.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 516,
              "column": 4
            },
            "end": {
              "line": 521,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "updateRequestObject",
          "description": "Updates request on a specific position.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 527,
              "column": 4
            },
            "end": {
              "line": 538,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request",
              "type": "Object",
              "description": "ArcRequest object"
            },
            {
              "name": "index",
              "type": "Number",
              "description": "Request index"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_closeRequest",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 540,
              "column": 4
            },
            "end": {
              "line": 548,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "removeRequest",
          "description": "Removes request for given index",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 555,
              "column": 4
            },
            "end": {
              "line": 580,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index",
              "type": "Number",
              "description": "Request index in the `activeRequests` liost."
            },
            {
              "name": "removeOnly",
              "type": "?Boolean",
              "description": "When true it only removes the panel but\nwill not check for the selection state and if empty panel is needed"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "serializeWorkspace",
          "description": "Serializes workspace state to a JavaScript object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 586,
              "column": 4
            },
            "end": {
              "line": 593,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Object",
            "desc": "An ArcWorkspace object"
          }
        },
        {
          "name": "_notifyStoreWorkspace",
          "description": "Dispatches `workspace-state-store` custom event to store workspace data.\nThe type of the request is `workspace-state`.\n\nIf there's an error it is not rerported back to the user.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 600,
              "column": 4
            },
            "end": {
              "line": 618,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "refreshTabs",
          "description": "Update tabs selection.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 622,
              "column": 4
            },
            "end": {
              "line": 624,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_selectedChanged",
          "description": "Notifies workspace state change when selected request changes.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 629,
              "column": 4
            },
            "end": {
              "line": 640,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selected",
              "type": "Number",
              "description": "item"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_requestsListChanged",
          "description": "Notifies workspace state change when request data changes.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 646,
              "column": 4
            },
            "end": {
              "line": 662,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "record",
              "type": "Object",
              "description": "Requests record change"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_envChangedHandler",
          "description": "Updates environment value in the state file when it's value change.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 668,
              "column": 4
            },
            "end": {
              "line": 674,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_envChanged",
          "description": "Notifies workspace change when environment changes.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 678,
              "column": 4
            },
            "end": {
              "line": 683,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "findRequestIndex",
          "description": "Finds requests index in the list of active requests.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 693,
              "column": 4
            },
            "end": {
              "line": 699,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "requestId",
              "type": "String",
              "description": "Saved request ID"
            },
            {
              "name": "tmpId",
              "type": "?String",
              "description": "An ID created by this component to identify\nnot saved request."
            }
          ],
          "return": {
            "type": "Number",
            "desc": "Request index or -1 if not found."
          }
        },
        {
          "name": "_requestStoreHandler",
          "description": "It ensures `_id` property exists opens save editor",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 705,
              "column": 4
            },
            "end": {
              "line": 715,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_renderRequestDetail",
          "description": "Opens the request details view",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 721,
              "column": 4
            },
            "end": {
              "line": 732,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_renderCodeSnippets",
          "description": "Dispatches `request-code-snippets` event with `request` object on the\ndetail.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 739,
              "column": 4
            },
            "end": {
              "line": 750,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_requestChangeHandler",
          "description": "Handler for non cancelable `request-object-changed` custom event.\nUpdates request object if it's one of currently opened objects.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 756,
              "column": 4
            },
            "end": {
              "line": 766,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_requestDeleteHandler",
          "description": "A handler for `request-object-deleted` custom event.\nChecks if deleted request is one of curerently rendered. If found it\nremoves information related to \"saved\" request.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 774,
              "column": 4
            },
            "end": {
              "line": 793,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleTrack",
          "description": "Handles track event dispatched by `Polymer.Gestures` library.\nThis method calls corresponding method to current dragging state.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 799,
              "column": 4
            },
            "end": {
              "line": 814,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onTrackStart",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 816,
              "column": 4
            },
            "end": {
              "line": 825,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onTrack",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 827,
              "column": 4
            },
            "end": {
              "line": 858,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onTrackEnd",
          "description": "Performs operation when the tab drop occurs.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 862,
              "column": 4
            },
            "end": {
              "line": 889,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_blockEditors",
          "description": "Sets `readonly` state on all editors",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 893,
              "column": 4
            },
            "end": {
              "line": 898,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_unblockEditors",
          "description": "Removes `readonly` state from all editors",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 902,
              "column": 4
            },
            "end": {
              "line": 910,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getReorderedItem",
          "description": "Gets the top level item from the DOM repeater that has been marked as a\ndraggable item.\nThe event can originate from child elements which shouldn't be dragged.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 920,
              "column": 4
            },
            "end": {
              "line": 935,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "The track event"
            }
          ],
          "return": {
            "type": "HTMLElement",
            "desc": "An element that is container for draggable items. Undefined if couldn't\nfind."
          }
        },
        {
          "name": "_updateDragPosition",
          "description": "Re-positions dragged element to the place where it belongs.\nIt accounts for scroll position if it changed since dragging started.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 941,
              "column": 4
            },
            "end": {
              "line": 947,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dx",
              "type": "Number",
              "description": "Delta X from starting position."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateTabPosition",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 949,
              "column": 4
            },
            "end": {
              "line": 963,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "ddx"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "addRequestById",
          "description": "Adds request(s) by id.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 970,
              "column": 4
            },
            "end": {
              "line": 1011,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "A request type. `history` or `saved`"
            },
            {
              "name": "id",
              "type": "(String | Array.<String>)",
              "description": "Request id or list of ids"
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "replaceByRequestId",
          "description": "Replaces current workspace with a request(s) passed in the argument.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1018,
              "column": 4
            },
            "end": {
              "line": 1021,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "A request type. `history` or `saved`"
            },
            {
              "name": "id",
              "type": "(String | Array.<String>)",
              "description": "Request id or list of ids"
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "clearWorkspace",
          "description": "Clears the workspace. Adds new empty request when ready.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1027,
              "column": 4
            },
            "end": {
              "line": 1037,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "ignoreAdd",
              "type": "Boolean",
              "description": "If set it won't add empty panel."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "appendByProject",
          "description": "Adds requests by a project.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1043,
              "column": 4
            },
            "end": {
              "line": 1090,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "project",
              "type": "(String | Object)",
              "description": "Project id or project object"
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "replaceByProject",
          "description": "Replace current workspace data by a project.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1096,
              "column": 4
            },
            "end": {
              "line": 1099,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "project",
              "type": "(String | Object)",
              "description": "Project id or project object"
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "replaceByRequestsData",
          "description": "Replaces current workspace with the request data passed as an argument.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1104,
              "column": 4
            },
            "end": {
              "line": 1125,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "requests",
              "type": "Array.<Object>",
              "description": "List of ArcRequest objects to use."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "saveOpened",
          "description": "Informs components to store request data.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1132,
              "column": 4
            },
            "end": {
              "line": 1155,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opts",
              "type": "?Object",
              "description": "Optional. If `source` property is set it\ndispatches `save-request` custom event immidietly. Otherwise dialog\nis shown."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resizeSheetContent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1157,
              "column": 4
            },
            "end": {
              "line": 1163,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_openSaveDialog",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1165,
              "column": 4
            },
            "end": {
              "line": 1171,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_cancelRequestEdit",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1173,
              "column": 4
            },
            "end": {
              "line": 1177,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_saveRequestEdit",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1179,
              "column": 4
            },
            "end": {
              "line": 1182,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_deleteRequestDetails",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1184,
              "column": 4
            },
            "end": {
              "line": 1201,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_editRequestDetails",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1203,
              "column": 4
            },
            "end": {
              "line": 1209,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "getActivePanel",
          "description": "Returns a reference to currently selected panel.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1214,
              "column": 4
            },
            "end": {
              "line": 1226,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "HTMLElement"
          }
        },
        {
          "name": "sendCurrent",
          "description": "Runs cureently active tab.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1230,
              "column": 4
            },
            "end": {
              "line": 1233,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "abortCurrent",
          "description": "Aborts currenlt selected panel",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1237,
              "column": 4
            },
            "end": {
              "line": 1240,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearCurrent",
          "description": "Aborts currenlt selected panel",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1244,
              "column": 4
            },
            "end": {
              "line": 1247,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "abortAll",
          "description": "Aborts all running requests",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1251,
              "column": 4
            },
            "end": {
              "line": 1258,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_appendRequestHandler",
          "description": "Handler for `request-workspace-append` custom event. Appends request\nto the worspace.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1264,
              "column": 4
            },
            "end": {
              "line": 1267,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent",
              "description": "A `request` property on detail object is expected."
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 245,
          "column": 2
        },
        "end": {
          "line": 1268,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.ArcRequestWorkspace",
      "attributes": [
        {
          "name": "dragging",
          "description": "True when file is dragged over the element.",
          "sourceRange": {
            "file": "../arc-file-drop-mixin/arc-file-drop-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 63,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcComponents.ArcFileDropMixin"
        },
        {
          "name": "redirect-uri",
          "description": "The OAuth2 redirect URI to pass to the authorization panel.",
          "sourceRange": {
            "start": {
              "line": 256,
              "column": 8
            },
            "end": {
              "line": 256,
              "column": 27
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "selected",
          "description": "Index of selected request panel",
          "sourceRange": {
            "start": {
              "line": 260,
              "column": 8
            },
            "end": {
              "line": 264,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "active-requests",
          "description": "List of currently loaded requests",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 8
            },
            "end": {
              "line": 274,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array.<Object>"
        },
        {
          "name": "environment",
          "description": "Currently selected workspace.\nWhen this value change it triggers workspace state change.",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 8
            },
            "end": {
              "line": 282,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "restoring",
          "description": "If set then workspace restoration process is in progress.",
          "sourceRange": {
            "start": {
              "line": 286,
              "column": 8
            },
            "end": {
              "line": 292,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "no-auto-restore",
          "description": "The component automatically ask to restore workspace when connected\nto the DOM. This ensures to prohibit auto restore request.",
          "sourceRange": {
            "start": {
              "line": 297,
              "column": 8
            },
            "end": {
              "line": 297,
              "column": 30
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "editor-opened",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 298,
              "column": 8
            },
            "end": {
              "line": 298,
              "column": 29
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "details-opened",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 299,
              "column": 8
            },
            "end": {
              "line": 299,
              "column": 30
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "snippets-opened",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 300,
              "column": 8
            },
            "end": {
              "line": 300,
              "column": 31
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "snippet-request",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 301,
              "column": 8
            },
            "end": {
              "line": 301,
              "column": 31
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "initialized",
          "description": "Set when workspace state has been read.",
          "sourceRange": {
            "start": {
              "line": 305,
              "column": 8
            },
            "end": {
              "line": 305,
              "column": 52
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "selected-changed",
          "description": "Fired when the `selected` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "restoring-changed",
          "description": "Fired when the `restoring` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "arc-request-workspace",
      "mixins": [
        "ArcComponents.ArcWorkspaceMixin",
        "ArcComponents.ArcFileDropMixin"
      ]
    }
  ],
  "mixins": [
    {
      "description": "This misin is mostly created to reduce amount of code in\n`arc-request-workspace` element.\n\nThe mixin specializes in placing `request-panel`s in the shadow DOM\nwiyhout using Polymer's repeater.\n\nProblem with repeater is that when re-arranging items or closing an\nitem in the workspace it updates every instance of the request panel\nto the right of the changed element and this costs a lot giving that each\npanel has to perform a lot of computation to render the view.\n\nThis element uses repeater to rendert he tabs, however it handles the content\nby it's own. This mixin contains implementation for DOM manipulation for\nrequest panels.",
      "summary": "",
      "path": "request-panels-mixin.html",
      "properties": [],
      "methods": [
        {
          "name": "__createPanelInstance",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 6
            },
            "end": {
              "line": 47,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "__setPanelRequestProperties",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "panel"
            },
            {
              "name": "request"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__addPanelListeners",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 70,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "panel"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__removePanelListeners",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "panel"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__getPanelById",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 6
            },
            "end": {
              "line": 87,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "__addPanel",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 6
            },
            "end": {
              "line": 99,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__removePanel",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 6
            },
            "end": {
              "line": 109,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__editorRequestHandler",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 6
            },
            "end": {
              "line": 137,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__editorMetaHandler",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 6
            },
            "end": {
              "line": 178,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__deselectActivePanel",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__selectPanel",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 196,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__updatePanelRequest",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id"
            },
            {
              "name": "request"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__clearAllPanels",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 207,
              "column": 6
            },
            "end": {
              "line": 213,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__updatePanelId",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 215,
              "column": 6
            },
            "end": {
              "line": 222,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "oldId"
            },
            {
              "name": "newId"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 26,
          "column": 2
        },
        "end": {
          "line": 225,
          "column": 4
        }
      },
      "privacy": "public",
      "name": "ArcComponents.ArcWorkspaceMixin",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    }
  ]
}
