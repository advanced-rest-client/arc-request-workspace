/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   arc-request-workspace.html
 */

/// <reference path="../polymer/types/polymer-element.d.ts" />
/// <reference path="../polymer/types/lib/elements/dom-repeat.d.ts" />
/// <reference path="../polymer/types/lib/utils/render-status.d.ts" />
/// <reference path="../paper-tabs/paper-tabs.d.ts" />
/// <reference path="../paper-tabs/paper-tab.d.ts" />
/// <reference path="../iron-icon/iron-icon.d.ts" />
/// <reference path="../arc-icons/arc-icons.d.ts" />
/// <reference path="../paper-icon-button/paper-icon-button.d.ts" />
/// <reference path="../request-panel/request-panel.d.ts" />
/// <reference path="../iron-pages/iron-pages.d.ts" />
/// <reference path="../paper-progress/paper-progress.d.ts" />

declare namespace UiElements {

  /**
   * `arc-request-workspace`
   *
   * A request workspace component for Advanced REST Client that creates a
   * list of requests.
   *
   * The element does not contain any logic responsible for storing and restoring
   * data. To use this component handle `preferences-store` and `preferences-read`
   * custom events. See source for implementation detaild.
   *
   * ## Styling
   *
   * `<arc-request-workspace>` provides the following custom properties and mixins for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--arc-request-workspace` | Mixin applied to this elment | `{}`
   * `--arc-request-workspace-tabs-backgroud-color` | | `rgba(0, 0, 0, 0.05)`
   * `--arc-request-workspace-tabs-border-color` | | `#e5e5e5`
   * `--arc-request-workspace-tabs-color` | | `rgba(0,0,0,0.87)`
   * `--arc-request-workspace-tabs-selected-background-color` | | `#fff`
   */
  class ArcRequestWorkspace extends Polymer.Element {

    /**
     * The OAuth2 redirect URI to pass to the authorization panel.
     */
    redirectUri: string|null|undefined;

    /**
     * Index of selected request panel
     */
    selected: number|null|undefined;

    /**
     * List of currently loaded requests
     */
    activeRequests: Array<object|null>|null;

    /**
     * Currently selected workspace.
     * When this value change it triggers workspace state change.
     */
    environment: string|null|undefined;

    /**
     * If set then workspace restoration process is in progress.
     */
    readonly restoring: boolean|null|undefined;

    /**
     * If set then it renders an option in request context menu to
     * toggle to XHR request via the extension. This information is passed
     * to the request editor element.
     *
     * It's only relevant to ARC Chrome request editor.
     */
    xhrExtension: boolean|null|undefined;
    connectedCallback(): void;
    disconnectedCallback(): void;

    /**
     * Restores workspace state.
     * It dispatches `preferences-read` custom event to query for workspace data
     * and restores requests if they were previously stored.
     */
    restoreWorkspace(): Promise<any>|null;

    /**
     * Restores workspace state from previously stored data.
     *
     * @param state Workspace state object
     */
    _restore(state: object|null): void;
    _computeTabName(item: any, url: any): any;

    /**
     * Appends request to the list of `activeRequests` and selects it.
     *
     * @param request ArcRequest object.
     */
    appendRequest(request: object|null): void;
    _panelRendered(): void;

    /**
     * Adds an empty request to the workspace.
     */
    addEmptyRequest(): void;
    _closeRequest(e: any): void;

    /**
     * Serializes workspace state to a JavaScript object.
     *
     * @returns An ArcWorkspace object
     */
    serializeWorkspace(): object|null;

    /**
     * Dispatches `preferences-store` custom event to store workspace data.
     * The type of the request is `workspace-state`.
     *
     * If there's an error it is not rerported back to the user.
     */
    _notifyStoreWorkspace(): void;

    /**
     * Update tabs selection.
     */
    refreshTabs(): void;

    /**
     * Notifies workspace state change when selected request changes.
     */
    _selectedChanged(): void;

    /**
     * Notifies workspace state change when request data changes.
     */
    _requestsListChanged(record: any): void;

    /**
     * Updates environment value in the state file when it's value change.
     */
    _envChangedHandler(e: any): void;

    /**
     * Notifies workspace change when environment changes.
     */
    _envChanged(): void;

    /**
     * Finds requests index in the list of active requests.
     *
     * @param requestId Saved request ID
     * @returns Request index or -1 if not found.
     */
    findRequestIndex(requestId: String|null): Number|null;
  }
}

interface HTMLElementTagNameMap {
  "arc-request-workspace": UiElements.ArcRequestWorkspace;
}
